{"version":3,"sources":["webpack://mesto/./src/components/Card.js","webpack://mesto/./src/components/FormValidator.js","webpack://mesto/./src/components/Section.js","webpack://mesto/./src/components/Popup.js","webpack://mesto/./src/components/PopupWithImage.js","webpack://mesto/./src/components/PopupWithForm.js","webpack://mesto/./src/components/UserInfo.js","webpack://mesto/./src/components/Api.js","webpack://mesto/./src/pages/index.js"],"names":["Card","data","templateSelector","idHolder","addLikeAction","removeLikeAction","handleCardClick","confirmAction","this","_data","_name","name","_link","link","_likes","likes","length","id","_id","_template","document","querySelector","content","_handleCardClick","_idHolder","_addLike","_removeLike","_confirm","cloneNode","_element","_getTemplate","_likeButton","_likeCounter","_deleteButton","_elementLink","_elementTitle","remove","likeAmount","classList","toggle","textContent","contains","addEventListener","_clickLike","_createElements","_setEventListeners","src","alt","owner","find","item","add","FormValidator","config","formElement","_config","_formElement","_inputList","Array","from","querySelectorAll","inputSelector","_buttonElement","submitButtonSelector","forEach","inputElement","_checkInputValidity","toggleButtonState","validity","valid","_hideInputError","_showInputError","errorElement","inputErrorClass","errorActiveClass","validationMessage","some","_hasInvalidInput","disabled","evt","preventDefault","Section","containerSelector","renderer","_renderer","_container","element","prepend","append","Popup","popupSelector","_popupElement","_handleEscape","_handleEscClose","bind","setEventListeners","removeEventListener","key","close","target","_handleOverlayClick","PopupWithImage","_popupImage","_popupFigcaption","PopupWithForm","showDefaultButton","showLoadingButton","formSubmit","_formSubmit","form","_popupSubmitButton","_showLoadingButton","_inputValues","input","value","text","setButtonCondition","_getInputValues","_handleFormSubmit","reset","UserInfo","userNameSelector","userDescriptionSelector","userAvatarSelector","_description","_avatar","description","avatar","inputData","about","Api","options","_url","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","method","body","JSON","stringify","cardId","popupFormEdit","popupFormAdd","popupFormAvatar","popupOpenEdit","popupOpenAdd","popupOpenAvatar","inputName","inputDescription","formSelector","myUserId","createCard","card","api","putLike","setLikesInfo","catch","err","console","log","handleLikeCard","deleteLike","handleDeleteLike","popupImageOpen","open","popupConfirm","generateCard","cardSection","addInitialItem","authorization","popupAdd","addNewCard","result","addItem","popupEdit","editProfileInfo","profileInfo","setUserInfo","getUserInfo","userCurrentName","userCurrentDescription","popupAvatar","updateAvatar","setUserAvatar","removeCard","handleRemoveCard","formValidEdit","enableValidation","formValidAdd","formValidAvatar","clearErrors","all","getInitialCards","userdata","cards","renderItems"],"mappings":"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","file":"main.js","sourcesContent":["export default class Card {\n  constructor(data, templateSelector, idHolder, addLikeAction, removeLikeAction, handleCardClick, confirmAction) {\n    this._data = data;\n    this._name = data.name;\n    this._link = data.link;\n    this._likes = data.likes.length;\n    this.id = data._id;\n    this._template = document.querySelector(templateSelector).content;\n    this._handleCardClick = handleCardClick;\n    this._idHolder = idHolder;\n    this._addLike = addLikeAction;\n    this._removeLike = removeLikeAction;\n    this._confirm = confirmAction;\n  }\n\n  _getTemplate() {\n    const cardElement = this._template.querySelector('.element').cloneNode(true);\n    return cardElement;\n  }\n\n  _createElements() {\n    this._element = this._getTemplate();\n\n    this._likeButton = this._element.querySelector('.element__like-button');\n    this._likeCounter = this._element.querySelector('.element__like-counter');\n    this._deleteButton = this._element.querySelector('.element__delete-button');\n    this._elementLink = this._element.querySelector('.element__image');\n    this._elementTitle = this._element.querySelector('.element__title');\n  }\n\n  handleRemoveCard() {\n    this._element.remove();\n    this._element = null;\n  }\n\n  setLikesInfo(likeAmount) {\n    this._likeButton.classList.toggle('element__like-button_active');\n    this._likeCounter.textContent = likeAmount;\n  }\n\n  _clickLike() {\n    if (this._likeButton.classList.contains('element__like-button_active')) {\n      this._removeLike();\n    } else this._addLike();\n  }\n\n  _setEventListeners() {\n    this._likeButton.addEventListener('click', () => this._clickLike());\n    this._deleteButton.addEventListener('click', () => this._confirm(this.id, this._element));\n    this._elementLink.addEventListener('click', () => this._handleCardClick());\n  }\n\n  generateCard() {\n    this._createElements();\n    this._setEventListeners();\n\n    this._elementLink.src = this._link;\n    this._elementLink.alt = 'Фотография ' + this._name;\n    this._elementTitle.textContent = this._name;\n    this._likeCounter.textContent = this._likes;\n\n    if (this._data.owner._id !== this._idHolder._id) {\n      this._deleteButton.remove();\n    }\n    if (this._data.likes.find((item) => item._id === this._idHolder._id)) {\n      this._likeButton.classList.add('element__like-button_active');\n    }\n\n    return this._element;\n  }\n}\n","export default class FormValidator {\n  constructor(config, formElement) {\n    this._config = config;\n    this._formElement = formElement;\n    this._inputList = Array.from(this._formElement.querySelectorAll(this._config.inputSelector));\n    this._buttonElement = this._formElement.querySelector(this._config.submitButtonSelector);\n  }\n\n  _setEventListeners() {\n    this._inputList.forEach((inputElement) => {\n      inputElement.addEventListener('input', () => {\n        this._checkInputValidity(inputElement);\n        this.toggleButtonState();\n      });\n    });\n  }\n\n  _checkInputValidity(inputElement) {\n    if (inputElement.validity.valid) {\n      this._hideInputError(inputElement);\n    } else {\n      this._showInputError(inputElement);\n    }\n  }\n\n  _hideInputError(inputElement) {\n    const errorElement = this._formElement.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.remove(this._config.inputErrorClass);\n    errorElement.textContent = '';\n    errorElement.classList.remove(this._config.errorActiveClass);\n  }\n\n  _showInputError(inputElement) {\n    const errorElement = this._formElement.querySelector(`#${inputElement.id}-error`);\n    inputElement.classList.add(this._config.inputErrorClass);\n    errorElement.textContent = inputElement.validationMessage;\n    errorElement.classList.add(this._config.errorActiveClass);\n  }\n\n  _hasInvalidInput() {\n    return this._inputList.some(inputElement => !inputElement.validity.valid);\n  }\n\n  toggleButtonState() {\n    if (this._hasInvalidInput()) {\n      this._buttonElement.disabled = true;\n    } else {\n      this._buttonElement.disabled = false;\n    }\n  }\n\n  clearErrors() {\n    this._inputList.forEach(inputElement => {\n      this._hideInputError(inputElement);\n    })\n  }\n\n  enableValidation() {\n    this._formElement.addEventListener('submit', (evt) => {\n      evt.preventDefault();\n    });\n    this._setEventListeners();\n  }\n}\n","export default class Section {\n  constructor({ renderer }, containerSelector) {\n    this._renderer = renderer;\n    this._container = document.querySelector(containerSelector);\n  }\n\n  renderItems(data) {\n    data.forEach(item => {\n      this._renderer(item);\n    });\n  }\n\n  addItem(element) {\n    this._container.prepend(element);\n  }\n\n  addInitialItem(element) {\n    this._container.append(element);\n  }\n}\n","export default class Popup {\n  constructor({ popupSelector }) {\n    this._popupElement = document.querySelector(popupSelector);\n    this._handleEscape = this._handleEscClose.bind(this);\n    this.setEventListeners();\n  }\n\n  open() {\n    this._popupElement.classList.add('popup_opened');\n    document.addEventListener('keydown', this._handleEscape);\n  }\n\n  close() {\n    this._popupElement.classList.remove('popup_opened');\n    document.removeEventListener('keydown', this._handleEscape);\n  }\n\n  _handleEscClose(evt) {\n    if (evt.key === 'Escape') {\n      this.close();\n    }\n  }\n\n  _handleOverlayClick(evt) {\n    if (evt.target.classList.contains('popup_opened')) {\n      this.close();\n    }\n  }\n\n  setEventListeners() {\n    this._popupElement.querySelector('.popup__close-button').addEventListener('click', () => this.close());\n    this._popupElement.addEventListener('click', this._handleOverlayClick.bind(this));\n  }\n}\n","import Popup from './Popup.js';\n\nexport default class PopupWithImage extends Popup {\n  constructor({ popupSelector }) {\n    super({ popupSelector });\n\n    this._popupImage = this._popupElement.querySelector('.popup__image');\n    this._popupFigcaption = this._popupElement.querySelector('.popup__figcaption');\n  }\n\n  open(item) {\n    super.open();\n\n    this._popupImage.src = item.link;\n    this._popupImage.alt = 'Фотография ' + item.name;\n    this._popupFigcaption.textContent = item.name;\n  }\n}\n","import Popup from './Popup.js';\n\nexport default class PopupWithForm extends Popup {\n  constructor({ popupSelector }, showDefaultButton, showLoadingButton, formSubmit) {\n    super({ popupSelector });\n    this._formSubmit = formSubmit;\n    this._inputList = Array.from(this.form.querySelectorAll('.popup__input'));\n    this._popupSubmitButton = this._popupElement.querySelector('.popup__submit-button');\n    this.showDefaultButton = showDefaultButton;\n    this._showLoadingButton = showLoadingButton;\n  }\n\n  _getInputValues() {\n    this._inputValues = {};\n    this._inputList.forEach(input => {\n      this._inputValues[input.name] = input.value;\n    });\n    return this._inputValues;\n  }\n\n  setButtonCondition(text) {\n    this._popupSubmitButton.textContent = text;\n  }\n\n  _handleFormSubmit(evt) {\n    evt.preventDefault();\n    this.setButtonCondition(this._showLoadingButton);\n    this._formSubmit(this._getInputValues());\n  }\n\n  setEventListeners() {\n    super.setEventListeners();\n    this.form = this._popupElement.querySelector('.popup__form');\n    this.form.addEventListener('submit', (evt) => this._handleFormSubmit(evt));\n  }\n\n  close() {\n    super.close();\n    this.form.reset();\n    this.setButtonCondition(this.showDefaultButton);\n  }\n}\n","export default class UserInfo {\n  constructor({ userNameSelector, userDescriptionSelector, userAvatarSelector }) {\n    this._name = document.querySelector(userNameSelector);\n    this._description = document.querySelector(userDescriptionSelector);\n    this._avatar = document.querySelector(userAvatarSelector);\n  }\n\n  getUserInfo() {\n    return {\n      name: this._name,\n      description: this._description,\n      avatar: this._avatar\n    }\n  }\n\n  setUserInfo(inputData) {\n    this._name.textContent = inputData.name;\n    this._description.textContent = inputData.about;\n  }\n\n  setUserAvatar(inputData) {\n    this._avatar.src = inputData.avatar;\n  }\n}\n","export default class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  editProfileInfo(inputData) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputData.name,\n        about: inputData.description,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  addNewCard(inputData) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputData.name,\n        link: inputData.link,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  removeCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n  }\n\n  putLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n  }\n\n  updateAvatar(inputData) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: inputData.link,\n      }),\n    }).then(this._checkResponse);\n  }\n}\n","import './index.css';\nimport Card from '../components/Card.js';\nimport FormValidator from '../components/FormValidator.js';\nimport Section from '../components/Section.js';\nimport PopupWithImage from '../components/PopupWithImage.js';\nimport PopupWithForm from '../components/PopupWithForm.js';\nimport UserInfo from '../components/UserInfo.js';\nimport Api from '../components/Api.js';\n\nconst popupFormEdit = document.querySelector('.popup__form_type_edit'); //Форма редактирования профиля\nconst popupFormAdd = document.querySelector('.popup__form_type_add'); //Форма добавления карточек\nconst popupFormAvatar = document.querySelector('.popup__form_type_avatar'); //Форма добавления аватара профиля\n\nconst popupOpenEdit = document.querySelector('.profile__edit-button'); //Кнопка открытия редактирования профиля\nconst popupOpenAdd = document.querySelector('.profile__add-button'); //Кнопка открытия добавления карточек\nconst popupOpenAvatar = document.querySelector('.profile__avatar-edit'); //Кнопка открытия добавления аватара профиля\n\nconst inputName = document.querySelector('.popup__input_type_name');\nconst inputDescription = document.querySelector('.popup__input_type_description');\n\nconst config = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__submit-button',\n  inputErrorClass: 'popup__input_type_error',\n  errorActiveClass: 'popup__input-error_active'\n}\n\nlet myUserId = null;\n\nfunction createCard(item) {\n  const card = new Card(\n    item,\n    '#element-template',\n    myUserId,\n    () => { handleLikeCard(item, card); },\n    () => { handleDeleteLike(item, card); },\n    () => popupImageOpen.open(item),\n    () => {\n      popupConfirm.open();\n      popupConfirm.card = card;\n    }\n  );\n  const cardElement = card.generateCard();\n  return cardElement;\n}\n\nfunction handleLikeCard(item, card) {\n  api.putLike(item._id)\n    .then(data => card.setLikesInfo(data.likes.length))\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nfunction handleDeleteLike(item, card) {\n  api.deleteLike(item._id)\n    .then(data => card.setLikesInfo(data.likes.length))\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nfunction handleDeleteCard(card) {\n  api.removeCard(card.id)\n    .then(() => {\n      card.handleRemoveCard();\n      popupConfirm.close();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nconst cardSection = new Section({\n  renderer: (item) => cardSection.addInitialItem(createCard(item))\n}, '.elements');\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25',\n  headers: {\n    authorization: 'b64fa093-d6bd-41e5-84d7-c528a8e6ffa0',\n    'Content-Type': 'application/json'\n  }\n});\n\nconst popupAdd = new PopupWithForm(\n  { popupSelector: '.popup_type_add' },\n  \"Создать\",\n  \"Создание...\",\n  (inputData) => {\n    api.addNewCard(inputData)\n      .then((result) => {\n        cardSection.addItem(createCard(result));\n        popupAdd.close();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n);\n\nconst popupEdit = new PopupWithForm(\n  { popupSelector: '.popup_type_edit' },\n  \"Сохранить\",\n  \"Сохранение...\",\n  (inputData) => {\n    api.editProfileInfo(inputData)\n      .then((result) => {\n        profileInfo.setUserInfo(result);\n        popupEdit.close();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n);\n\nconst popupImageOpen = new PopupWithImage({\n  popupSelector: '.popup_type_image'\n});\n\nconst profileInfo = new UserInfo({\n  userNameSelector: '.profile__name',\n  userDescriptionSelector: '.profile__description',\n  userAvatarSelector: '.profile__avatar',\n});\n\nconst {\n  name: userCurrentName,\n  description: userCurrentDescription,\n  avatar: userCurrentAvatar,\n} = profileInfo.getUserInfo();\n\nconst popupAvatar = new PopupWithForm(\n  { popupSelector: '.popup_type_avatar' },\n  \"Сохранить\",\n  \"Сохранение...\",\n  (inputData) => {\n    api.updateAvatar(inputData)\n      .then((result) => {\n        profileInfo.setUserAvatar(result);\n        popupAvatar.close();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n);\n\nconst popupConfirm = new PopupWithForm(\n  { popupSelector: '.popup_type_confirm' },\n  \"Да\",\n  \"Удаление...\",\n  () => {\n    handleDeleteCard(popupConfirm.card);\n  }\n);\n\nconst formValidEdit = new FormValidator(config, popupFormEdit);\nformValidEdit.enableValidation();\n\nconst formValidAdd = new FormValidator(config, popupFormAdd);\nformValidAdd.enableValidation();\n\nconst formValidAvatar = new FormValidator(config, popupFormAvatar);\nformValidAvatar.enableValidation();\n\npopupOpenEdit.addEventListener('click', () => {\n  popupEdit.open();\n  inputName.value = userCurrentName.textContent;\n  inputDescription.value = userCurrentDescription.textContent;\n  formValidEdit.toggleButtonState();\n  formValidEdit.clearErrors();\n});\n\npopupOpenAdd.addEventListener('click', () => {\n  popupAdd.open();\n  formValidAdd.toggleButtonState();\n  formValidAdd.clearErrors();\n});\n\npopupOpenAvatar.addEventListener('click', () => {\n  popupAvatar.open();\n  formValidAvatar.toggleButtonState();\n  formValidAvatar.clearErrors();\n});\n\nPromise.all([api.getUserInfo(), api.getInitialCards()])\n  .then(([userdata, cards]) => {\n    profileInfo.setUserInfo(userdata);\n    profileInfo.setUserAvatar(userdata);\n    myUserId = userdata;\n    cardSection.renderItems(cards);\n  })\n  .catch((err) => {\n    console.log(err);\n  }\n);\n"],"sourceRoot":""}